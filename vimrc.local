" use vim syntax
set nocompatible

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Vundle begin
" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
source ~/.vim/vimrc.bundles
call vundle#end()

filetype plugin indent on


" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => solarized begin
" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
syntax enable
set t_Co=256
set background=light


" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => general
" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" set the line number
set nu

" more powerful backspacing
set backspace=indent,eol,start

" fast saving
" the <leader> is backslash as default
nmap <leader>w :w!<cr>
nmap <leader>q :q!<cr>

" font
set guifont=Source\ Code\ Pro\ Semi-Bold


" set tab for 4 spaces
set smarttab
set tabstop=4
set shiftwidth=4
set expandtab
set autoindent

nmap <F8> :TagbarToggle<CR>

" set paste and nopaste
set pastetoggle=<F9>



if has("autocmd")
    " When editing a file, always jump to the last cursor position
    autocmd BufReadPost *
    \ if line("'\"") > 0 && line ("'\"") <= line("$") |
    \   exe "normal g'\"" |
    \ endif
    " Set tabs and spaces for html, css and js
    " autocmd BufNewFile,BufReadPost *.html, *htm, *.css, *.js set noexpandtab tabstop=2 shiftwidth=2
endif

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM user interface
" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" set 7 lines to the cursor - when moving vertically using j/k
set so=7

" set ruler and command bar
" set ruler
" set cmdheight=2
set laststatus=2

" search setting
set ignorecase
set smartcase
set hlsearch
set incsearch

" for regular expressions turn magic on
set magic

" show matching brackets when text indicator is over them
set showmatch
" how many tenths of a second to blink when matching brackets
set mat=2

" files, backups and undo
" turn backup off
set nobackup
set nowb
set noswapfile

" encoding
set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936 " vim probe the file with list of fileencodings
set termencoding=utf-8 " terminal encoding
set encoding=utf-8 " encoding of buffer and menu

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Moving around, windows and buffers
" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" smart way to move between windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l


" window size
nmap <Left> <C-W><
nmap <Right> <C-W>>
nmap <Up> <C-W>+
nmap <Down> <C-W>-

nmap <C-Left> gT
nmap <C-Right> gt


" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugin configure
" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" nerdtree
nmap <F5> :NERDTreeToggle<cr>
" 在 vim 启动的时候默认开启 NERDTree（autocmd 可以缩写为 au）
autocmd VimEnter * NERDTree
" 鼠标默认在右边
wincmd w
autocmd VimEnter * wincmd w
" 自动退出
autocmd BufEnter * if 0 == len(filter(range(1, winnr('$')), 'empty(getbufvar(winbufnr(v:val), "&bt"))')) | qa! | endif

" taglist
let Tlist_Show_One_File = 1            "只显示当前文件的taglist，默认是显示>    多个
let Tlist_Exit_OnlyWindow = 1          "如果taglist是最后一个窗口，则退出vim
let Tlist_Use_Right_Window = 1         "在右侧窗口中显示taglist
let Tlist_GainFocus_On_ToggleOpen = 1  "打开taglist时，光标保留在taglist窗口
let Tlist_Ctags_Cmd='/usr/bin/ctags'  "设置ctags命令的位置
nmap <F4> :Tlist<cr>        " 设置关闭和打开taglist窗口的快捷键

" syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" indent
" 随 vim 自启动
let g:indent_guides_enable_on_vim_startup=1
" 从第二层开始可视化显示缩进
let g:indent_guides_start_level=2
" 色块宽度
let g:indent_guides_guide_size=1
" 快捷键 i 开/关缩进可视化
nmap <silent> <Leader>i <Plug>IndentGuidesToggle

" a.vim
" *.cpp 和 *.h 间切换
nmap <Leader>ch :A<CR>
" 子窗口中显示 *.cpp 或 *.h
nmap <Leader>sch :AV<CR>

let g:airline_powerline_fonts = 1 

" ctrlp
let g:ctrlp_map = '<c-p>' 
let g:ctrlp_cmd = 'CtrlP'
" 设置过滤不进行查找的后缀名 
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn|pyc)$' 

" easy-motion
" <Leader>f{char} to move to {char}
map  <Leader>f <Plug>(easymotion-bd-f)
nmap <Leader>f <Plug>(easymotion-overwin-f)

" s{char}{char} to move to {char}{char}
nmap s <Plug>(easymotion-overwin-f2)

" Move to line
map <Leader>L <Plug>(easymotion-bd-jk)
nmap <Leader>L <Plug>(easymotion-overwin-line)

" Move to word
map  <Leader>w <Plug>(easymotion-bd-w)
nmap <Leader>w <Plug>(easymotion-overwin-w)
